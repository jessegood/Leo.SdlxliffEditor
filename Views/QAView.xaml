<UserControl x:Class="Leo.SdlxliffEditor.Views.QAView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
             xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
             xmlns:c="clr-namespace:Leo.SdlxliffEditor.Converters"
             xmlns:vm="clr-namespace:Leo.SdlxliffEditor.ViewModels"
             xmlns:view="clr-namespace:Leo.SdlxliffEditor.Views"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=vm:QAViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type DataGridRow}}">
                <Setter Property="adonisExtensions:DataGridExtension.IsReportingErrorsToDataGrid" Value="False" />
            </Style>
            <c:ReverseBooleanConverter x:Key="ReverseBooleanConverter" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Expander Grid.Row="0" ExpandDirection="Up" IsExpanded="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <view:QASettingsView Grid.Column="0" DataContext="{Binding QASettingsViewModel}" />
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Button Grid.Row="0" Content="{StaticResource LoadFiles}" Command="{Binding LoadFilesCommand}" Margin="{adonisUi:Space}" />
                    <Button Grid.Row="1" Content="{StaticResource RunQACheck}" Command="{Binding RunQACheckCommand}" Margin="{adonisUi:Space}"
                            IsEnabled="{Binding RunQACheckCommand.IsRunning, Mode=OneWay, Converter={StaticResource ReverseBooleanConverter}}" />
                    <Button Grid.Row="2" Content="{StaticResource SaveFiles}" Command="{Binding SaveFilesCommand}" Margin="{adonisUi:Space}"
                            IsEnabled="{Binding SaveFilesCommand.IsRunning, Mode=OneWay, Converter={StaticResource ReverseBooleanConverter}}" />
                </Grid>
            </Grid>
        </Expander>
        <ProgressBar x:Name="ProgressBar" Grid.Row="1" Minimum="0" Maximum="100" Value="{Binding ProgressValue, UpdateSourceTrigger=PropertyChanged}"
                     adonisExtensions:ProgressBarExtension.Content="{Binding ProgressBarContent, UpdateSourceTrigger=PropertyChanged}"
                     adonisExtensions:ProgressBarExtension.IsProgressAnimationEnabled="{Binding IsProgressBarAnimationEnabled, UpdateSourceTrigger=PropertyChanged}"
                     BorderThickness="0">
            <ProgressBar.Style>
                <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource ProgressBarStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RunQACheckCommand.IsRunning, Mode=OneWay}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:1"
                                                         From="0"
                                                         To="30"
                                                         Storyboard.TargetProperty="(ProgressBar.Height)">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase Amplitude="0.3" EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:1"
                                                         From="30"
                                                         To="0"
                                                         Storyboard.TargetProperty="(ProgressBar.Height)">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase Amplitude="0.3" EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ProgressBar.Style>
        </ProgressBar>
        <TabControl Grid.Row="2" ItemsSource="{Binding QACheckResults}" SelectedIndex="0"
                    Grid.IsSharedSizeScope="True">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}"  VerticalAlignment="Center" />
                        <Button VerticalAlignment="Center" ContentTemplate="{DynamicResource {x:Static adonisUi:Icons.WindowClose}}"
                                Width="16" Height="16" Margin="5, 0, 0, 0"
                                Command="{Binding CloseTabCommand}"
                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" />
                    </StackPanel>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.Resources>
                <DataTemplate DataType="{x:Type vm:QACheckResultsViewModel}">
                    <view:QACheckResultsView IsTargetChanged="{Binding IsTargetChanged}"/>
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:InconsistenciesQACheckResultsViewModel}">
                    <view:InconsistenciesQACheckResultsView IsTargetChanged="{Binding IsTargetChanged}" />
                </DataTemplate>
            </TabControl.Resources>
        </TabControl>
    </Grid>
</UserControl>