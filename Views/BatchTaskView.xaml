<UserControl x:Class="Leo.SdlxliffEditor.Views.BatchTaskView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:conv="clr-namespace:Leo.SdlxliffEditor.Converters"
             xmlns:prop="clr-namespace:Leo.SdlxliffEditor.Properties"
             xmlns:adonisUI="clr-namespace:AdonisUI;assembly=AdonisUI"
             xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <GroupBox Grid.Column="0" Header="{StaticResource FileList}" BorderThickness="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <DataGrid Grid.Row="0" Grid.ColumnSpan="3" AllowDrop="True" prop:DragAndDropProperty.DragAndDropCommand="{Binding DropCommand}"
                         ItemsSource="{Binding FilePaths}" AutoGenerateColumns="False" HorizontalScrollBarVisibility="Disabled">
                    <DataGrid.Resources>
                        <conv:FilePathToFileNameConverter x:Key="FilePathToFileNameConverter" />
                        <conv:FilePathToFolderNameConverter x:Key="FilePathToFolderNameConverter" />
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{StaticResource FileName}" Binding="{Binding Converter={StaticResource FilePathToFileNameConverter}}"
                                            IsReadOnly="True" Width="Auto" />
                        <DataGridTextColumn Header="{StaticResource Path}" Binding="{Binding Converter={StaticResource FilePathToFolderNameConverter}}"
                                            IsReadOnly="True" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <Button Grid.Row="1" Grid.Column="0" Content="{StaticResource SelectFolder}" Command="{Binding SelectFolderCommand}" Margin="0, 1" />
                <Button Grid.Row="1" Grid.Column="1" Content="{StaticResource SelectFiles}" Command="{Binding SelectFilesCommand}" Margin="0, 1" />
                <Button Grid.Row="1" Grid.Column="2" Content="{StaticResource ClearList}" Command="{Binding ClearListCommand}" Margin="0, 1">
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ProgressBar" Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
            </Grid>
        </GroupBox>
        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Width="5" />
        <GroupBox Grid.Column="2" Header="{StaticResource BatchTasks}" BorderThickness="1">
            <Grid>
                <Grid.Resources>
                    <conv:ReverseBooleanConverter x:Key="ReverseBooleanConverter" />
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <DataGrid Grid.Row="0" ItemsSource="{Binding BatchTasks}" AutoGenerateColumns="False" CanUserAddRows="False"
                          HorizontalScrollBarVisibility="Disabled">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="{StaticResource OnOff}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" Content="{Binding Name}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="{StaticResource Description}" Binding="{Binding Description}"
                                            IsReadOnly="True" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn Header="{StaticResource Settings}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="{StaticResource Settings}" Command="{Binding SettingsCommand}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <Button Grid.Row="1" Content="{StaticResource RunBatchTasks}" Command="{Binding RunBatchTaskCommand}" Margin="{adonisUI:Space 0, 1, 0, 1}"
                        IsEnabled="{Binding RunBatchTaskCommand.IsRunning, Mode=OneWay, Converter={StaticResource ReverseBooleanConverter}}">
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ProgressBar" Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
                <ProgressBar x:Name="ProgressBar" Grid.Row="2" Minimum="0" Maximum="100" Value="{Binding ProgressValue}" Visibility="Collapsed"
                             Style="{StaticResource ProgressBarStyle}" Padding="8, 4" Margin="0, 1" adonisExtensions:ProgressBarExtension.Content="{Binding ProgressBarContent, UpdateSourceTrigger=PropertyChanged}"
                             adonisExtensions:ProgressBarExtension.IsProgressAnimationEnabled="{Binding IsProgressBarAnimationEnabled, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>