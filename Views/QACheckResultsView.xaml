<views:CheckResultsViewBase
             xmlns:views="clr-namespace:Leo.SdlxliffEditor.Views"
             x:Class="Leo.SdlxliffEditor.Views.QACheckResultsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
             xmlns:cm="clr-namespace:Leo.SdlxliffEditor.ContextMenus"
             xmlns:control="clr-namespace:Leo.SdlxliffEditor.Controls"
             xmlns:c="clr-namespace:Leo.SdlxliffEditor.Converters"
             xmlns:p="clr-namespace:Leo.SdlxliffEditor.Properties"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <GroupBox>
        <GroupBox.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </GroupBox.Resources>
        <GroupBox.Header>
            <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                <TextBlock Text="{StaticResource ErrorCount}" />
                <TextBlock Text="{Binding ErrorCount, StringFormat=: {0}}" />
            </StackPanel>
        </GroupBox.Header>
        <Grid Visibility="{Binding IsVisible, Mode=OneTime, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <ListBox x:Name="FileList" Grid.Column="0"
                 ItemsSource="{Binding SegmentPairs}" IsSynchronizedWithCurrentItem="True"
                 Margin="{adonisUi:Space}">
                <ListBox.Resources>
                    <c:FilePathToFileNameConverter x:Key="FilePathToFileNameConverter" />
                </ListBox.Resources>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Key, Converter={StaticResource FilePathToFileNameConverter}}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <DataGrid Grid.Column="1"
                  ItemsSource="{Binding ElementName=FileList, Path=SelectedItem.Value, IsAsync=True}"
                  EnableColumnVirtualization="True"
                  EnableRowVirtualization="True"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ScrollViewer.IsDeferredScrollingEnabled="True"
                  AutoGenerateColumns="False"
                  CanUserSortColumns="False"
                  CanUserAddRows="False"
                  GridLinesVisibility="All"
                  MaxHeight="2000"
                  MaxWidth="1600">
                <DataGrid.InputBindings>
                    <KeyBinding Command="{Binding ContextMenuItems[0].Command}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}}"
                            Key="L" Modifiers="Ctrl" />
                </DataGrid.InputBindings>
                <DataGrid.Resources>
                    <cm:BindingProxy x:Key="Proxy" Data="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}}" />
                    <Style TargetType="MenuItem" x:Key="ContextMenuStyle">
                        <Setter Property="CommandParameter" Value="{Binding Path=Data, Source={StaticResource Proxy}}" />
                        <Setter Property="ItemsSource" Value="{Binding ContextMenuItems}" />
                        <Setter Property="Command" Value="{Binding Command}" />
                        <Setter Property="Header" Value="{Binding MenuName}" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Width="*" Header="{StaticResource Source}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <RichTextBox BorderBrush="Transparent" Padding="2" p:SegmentProperty.SegmentContents="{Binding SourceSegment}"
                                             p:CopyAndPasteProperty.CopyAndPasteBindings="" IsReadOnly="True" Focusable="False" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Width="*" Header="{StaticResource Target}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <RichTextBox BorderBrush="Transparent" Padding="2" p:SegmentProperty.SegmentContents="{Binding TargetSegment}"
                                             GotFocus="OnTargetGotFocus" LostFocus="OnTargetLostFocus" p:CopyAndPasteProperty.CopyAndPasteBindings="">
                                    <RichTextBox.ContextMenu>
                                        <ContextMenu ItemsSource="{Binding ContextMenuItems}" ItemContainerStyle="{StaticResource ContextMenuStyle}" />
                                    </RichTextBox.ContextMenu>
                                </RichTextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Width="Auto" Header="{StaticResource MatchLevel}" IsReadOnly="True">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <control:MatchStatusControl />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Width="Auto" Header="{StaticResource Status}" IsReadOnly="True">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <control:ConfirmationLevelControl VerticalContentAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Width="Auto" Header="{StaticResource LockStatus}" IsReadOnly="True">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <control:LockStatusControl VerticalContentAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <DataGrid.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ContextMenuItems}">
                        <ContextMenu.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="CommandParameter" Value="{Binding Path=Data, Source={StaticResource Proxy}}" />
                                <Setter Property="ItemsSource" Value="{Binding ContextMenuItems}" />
                                <Setter Property="Command" Value="{Binding Command}" />
                                <Setter Property="Header" Value="{Binding MenuName}" />
                            </Style>
                        </ContextMenu.ItemContainerStyle>
                    </ContextMenu>
                </DataGrid.ContextMenu>
            </DataGrid>
        </Grid>
    </GroupBox>
</views:CheckResultsViewBase>